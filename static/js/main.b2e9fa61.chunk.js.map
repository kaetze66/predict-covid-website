{"version":3,"sources":["../ /^/.//.*$/ groupOptions: {} namespace object","components/Brush.js","Visualizations.tsx","transformData.ts","Configuration.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","Brush","props","handleDrag","leaveTimer","clearTimeout","state","isTravellerMoving","handleTravellerMove","isSlideMoving","handleSlideDrag","handleTouchMove","changedTouches","length","handleDragEnd","setState","getIndex","startX","endX","startIndex","endIndex","scale","handleLeaveWrapper","setTimeout","leaveTimeOut","handleEnterSlideOrTraveller","isTextActive","handleLeaveSlideOrTraveller","handleSlideDragStart","event","slideMoveStartX","pageX","travellerDragStartHandlers","handleTravellerDragStart","bind","data","updateScale","nextProps","this","width","x","travellerWidth","updateId","range","scaleValues","domain","entry","gap","min","Math","max","minIndex","constructor","getIndexInRange","maxIndex","round","index","tickFormatter","dataKey","text","getValueByDataKey","_","isFunction","onChange","delta","newIndex","movingTravellerId","brushMoveStartX","prevValue","params","lastIndex","isFullGap","len","scalePoint","y","height","fill","stroke","children","padding","chartElement","Children","only","React","cloneElement","margin","compact","travellerX","lineY","floor","className","onMouseEnter","onMouseLeave","onMouseDown","onTouchStart","style","cursor","x1","y1","x2","y2","fillOpacity","abs","attrs","pointerEvents","textAnchor","verticalAnchor","getTextOfTick","alwaysShowText","isNumber","layerClass","classNames","isPanoramic","count","generatePrefixStyle","newStartX","newEndX","onMouseMove","onMouseUp","onTouchEnd","onTouchMove","renderBackground","renderPanorama","renderSlide","renderTraveller","renderText","start","end","middle","PureComponent","displayName","defaultProps","top","right","bottom","left","CustomBrush","graphCategories","name","color","Visualizations","loading","config","useState","precautionDates","setPrecationDates","category","key","replace","offset","stopColor","stopOpacity","interval","type","dataMax","strokeDasharray","stackId","disabled","socialDistancing","selfQuarantine","transformData","csvData","csvText","headers","join","Papa","parse","header","transformHeader","transform","v","skipEmptyLines","Configuration","onConfigUpdate","setSocialDistancing","setSelfQuarantine","isInitial","useRef","useEffect","current","checked","s","htmlFor","App","setConfig","setLoading","setData","dataFile","console","log","a","dataUrl","default","fetch","response","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b2e9fa61.chunk.js","sourcesContent":["var map = {\n\t\"./00_full_results.csv\": [\n\t\t414,\n\t\t3\n\t],\n\t\"./results_sd_20_80.csv\": [\n\t\t415,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 168;\nmodule.exports = webpackAsyncContext;","/**\r\n * @fileOverview Brush\r\n */\r\nimport React, { PureComponent, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { scalePoint } from 'd3-scale';\r\nimport _ from 'lodash';\r\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\r\nimport Layer from 'recharts/lib/container/Layer';\r\nimport Text from 'recharts/lib/component/Text';\r\nimport { isNumber } from 'recharts/lib/util/DataUtils';\r\nimport { generatePrefixStyle } from 'recharts/lib/util/CssPrefixUtils';\r\n\r\nclass Brush extends PureComponent {\r\n  static displayName = 'Brush';\r\n\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n\r\n    fill: PropTypes.string,\r\n    stroke: PropTypes.string,\r\n    x: PropTypes.number,\r\n    y: PropTypes.number,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number.isRequired,\r\n    travellerWidth: PropTypes.number,\r\n    gap: PropTypes.number,\r\n    padding: PropTypes.shape({\r\n      top: PropTypes.number,\r\n      right: PropTypes.number,\r\n      bottom: PropTypes.number,\r\n      left: PropTypes.number,\r\n    }),\r\n\r\n    dataKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.func]),\r\n    data: PropTypes.array,\r\n    startIndex: PropTypes.number,\r\n    endIndex: PropTypes.number,\r\n    tickFormatter: PropTypes.func,\r\n\r\n    children: PropTypes.node,\r\n\r\n    onChange: PropTypes.func,\r\n    updateId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    leaveTimeOut: PropTypes.number,\r\n    alwaysShowText: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    height: 40,\r\n    travellerWidth: 5,\r\n    gap: 1,\r\n    fill: '#fff',\r\n    stroke: '#666',\r\n    padding: { top: 1, right: 1, bottom: 1, left: 1 },\r\n    leaveTimeOut: 1000,\r\n    alwaysShowText: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.travellerDragStartHandlers = {\r\n      startX: this.handleTravellerDragStart.bind(this, 'startX'),\r\n      endX: this.handleTravellerDragStart.bind(this, 'endX'),\r\n    };\r\n\r\n    this.state = props.data && props.data.length ? this.updateScale(props) : {};\r\n  }\r\n\r\n  // eslint-disable-next-line camelcase\r\n  componentWillReceiveProps(nextProps) {\r\n    const { data, width, x, travellerWidth, updateId } = this.props;\r\n\r\n    if ((nextProps.data !== data || nextProps.updateId !== updateId) && nextProps.data && nextProps.data.length) {\r\n      this.setState(this.updateScale(nextProps));\r\n    } else if (nextProps.width !== width || nextProps.x !== x || nextProps.travellerWidth !== travellerWidth) {\r\n      this.scale.range([nextProps.x, nextProps.x + nextProps.width - nextProps.travellerWidth]);\r\n      this.scaleValues = this.scale.domain().map(entry => this.scale(entry));\r\n\r\n      this.setState({\r\n        startX: this.scale(nextProps.startIndex),\r\n        endX: this.scale(nextProps.endIndex),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.scale = null;\r\n    this.scaleValues = null;\r\n\r\n    if (this.leaveTimer) {\r\n      clearTimeout(this.leaveTimer);\r\n      this.leaveTimer = null;\r\n    }\r\n  }\r\n\r\n  static getIndexInRange(range, x) {\r\n    const len = range.length;\r\n    let start = 0;\r\n    let end = len - 1;\r\n\r\n    while (end - start > 1) {\r\n      const middle = Math.floor((start + end) / 2);\r\n\r\n      if (range[middle] > x) {\r\n        end = middle;\r\n      } else {\r\n        start = middle;\r\n      }\r\n    }\r\n\r\n    return x >= range[end] ? end : start;\r\n  }\r\n\r\n  getIndex({ startX, endX }) {\r\n    const { gap } = this.props;\r\n    const min = Math.min(startX, endX);\r\n    const max = Math.max(startX, endX);\r\n    const minIndex = this.constructor.getIndexInRange(this.scaleValues, min);\r\n    const maxIndex = this.constructor.getIndexInRange(this.scaleValues, max);\r\n    return {\r\n      startIndex: Math.round(minIndex / gap) * gap,\r\n      endIndex: Math.round(maxIndex / gap) * gap,\r\n    };\r\n  }\r\n\r\n  getTextOfTick(index) {\r\n    const { data, tickFormatter, dataKey } = this.props;\r\n    const text = getValueByDataKey(data[index], dataKey, index);\r\n\r\n    return _.isFunction(tickFormatter) ? tickFormatter(text) : text;\r\n  }\r\n\r\n  handleDrag = e => {\r\n    if (this.leaveTimer) {\r\n      clearTimeout(this.leaveTimer);\r\n      this.leaveTimer = null;\r\n    }\r\n\r\n    if (this.state.isTravellerMoving) {\r\n      this.handleTravellerMove(e);\r\n    } else if (this.state.isSlideMoving) {\r\n      this.handleSlideDrag(e);\r\n    }\r\n  };\r\n\r\n  handleTouchMove = e => {\r\n    if (e.changedTouches != null && e.changedTouches.length > 0) {\r\n      this.handleDrag(e.changedTouches[0]);\r\n    }\r\n  };\r\n\r\n  handleDragEnd = () => {\r\n    this.setState({\r\n      isTravellerMoving: false,\r\n      isSlideMoving: false,\r\n    });\r\n    const { startIndex, endIndex } = this.getIndex({ startX: this.state.startX, endX: this.state.endX });\r\n    this.setState({\r\n      startX: this.scale(startIndex),\r\n      endX: this.scale(endIndex),\r\n    });\r\n  };\r\n\r\n  handleLeaveWrapper = () => {\r\n    if (this.state.isTravellerMoving || this.state.isSlideMoving) {\r\n      this.leaveTimer = setTimeout(this.handleDragEnd, this.props.leaveTimeOut);\r\n    }\r\n  };\r\n\r\n  handleEnterSlideOrTraveller = () => {\r\n    this.setState({\r\n      isTextActive: true,\r\n    });\r\n  };\r\n\r\n  handleLeaveSlideOrTraveller = () => {\r\n    this.setState({\r\n      isTextActive: false,\r\n    });\r\n  };\r\n\r\n  handleSlideDragStart = e => {\r\n    const event = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e;\r\n\r\n    this.setState({\r\n      isTravellerMoving: false,\r\n      isSlideMoving: true,\r\n      slideMoveStartX: event.pageX,\r\n    });\r\n  };\r\n\r\n  handleSlideDrag(e) {\r\n    const { slideMoveStartX, startX, endX } = this.state;\r\n    const { x, width, travellerWidth, startIndex, endIndex, onChange } = this.props;\r\n    let delta = e.pageX - slideMoveStartX;\r\n\r\n    if (delta > 0) {\r\n      delta = Math.min(delta, x + width - travellerWidth - endX, x + width - travellerWidth - startX);\r\n    } else if (delta < 0) {\r\n      delta = Math.max(delta, x - startX, x - endX);\r\n    }\r\n    const newIndex = this.getIndex({\r\n      startX: startX + delta,\r\n      endX: endX + delta,\r\n    });\r\n\r\n    if ((newIndex.startIndex !== startIndex || newIndex.endIndex !== endIndex) && onChange) {\r\n      onChange(newIndex);\r\n    }\r\n\r\n    this.setState({\r\n      startX: startX + delta,\r\n      endX: endX + delta,\r\n      slideMoveStartX: e.pageX,\r\n    });\r\n  }\r\n\r\n  handleTravellerDragStart(id, e) {\r\n    const event = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e;\r\n\r\n    this.setState({\r\n      isSlideMoving: false,\r\n      isTravellerMoving: true,\r\n      movingTravellerId: id,\r\n      brushMoveStartX: event.pageX,\r\n    });\r\n  }\r\n\r\n  handleTravellerMove(e) {\r\n    const { brushMoveStartX, movingTravellerId, endX, startX } = this.state;\r\n    const prevValue = this.state[movingTravellerId];\r\n\r\n    const { x, width, travellerWidth, onChange, gap, data } = this.props;\r\n    const params = { startX: this.state.startX, endX: this.state.endX };\r\n\r\n    let delta = e.pageX - brushMoveStartX;\r\n    if (delta > 0) {\r\n      delta = Math.min(delta, x + width - travellerWidth - prevValue);\r\n    } else if (delta < 0) {\r\n      delta = Math.max(delta, x - prevValue);\r\n    }\r\n\r\n    params[movingTravellerId] = prevValue + delta;\r\n\r\n    const newIndex = this.getIndex(params);\r\n    const { startIndex, endIndex } = newIndex;\r\n    const isFullGap = () => {\r\n      const lastIndex = data.length - 1;\r\n      if (\r\n        (movingTravellerId === 'startX' && (endX > startX ? startIndex % gap === 0 : endIndex % gap === 0)) ||\r\n        (endX < startX && endIndex === lastIndex) ||\r\n        (movingTravellerId === 'endX' && (endX > startX ? endIndex % gap === 0 : startIndex % gap === 0)) ||\r\n        (endX > startX && endIndex === lastIndex)\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    this.setState(\r\n      {\r\n        [movingTravellerId]: prevValue + delta,\r\n        brushMoveStartX: e.pageX,\r\n      },\r\n      () => {\r\n        if (onChange) {\r\n          if (isFullGap()) {\r\n            onChange(newIndex);\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  updateScale(props) {\r\n    const { data, startIndex, endIndex, x, width, travellerWidth } = props;\r\n    const len = data.length;\r\n    this.scale = scalePoint()\r\n      .domain(_.range(0, len))\r\n      .range([x, x + width - travellerWidth]);\r\n    this.scaleValues = this.scale.domain().map(entry => this.scale(entry));\r\n    return {\r\n      isTextActive: false,\r\n      isSlideMoving: false,\r\n      isTravellerMoving: false,\r\n      startX: this.scale(startIndex),\r\n      endX: this.scale(endIndex),\r\n    };\r\n  }\r\n\r\n  renderBackground() {\r\n    const { x, y, width, height, fill, stroke } = this.props;\r\n\r\n    return <rect stroke={stroke} fill={fill} x={x} y={y} width={width} height={height} />;\r\n  }\r\n\r\n  renderPanorama() {\r\n    const { x, y, width, height, data, children, padding } = this.props;\r\n    const chartElement = Children.only(children);\r\n\r\n    if (!chartElement) {\r\n      return null;\r\n    }\r\n\r\n    return React.cloneElement(chartElement, {\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n      margin: padding,\r\n      compact: true,\r\n      data,\r\n    });\r\n  }\r\n\r\n  renderTraveller(travellerX, id) {\r\n    const { y, travellerWidth, height, stroke } = this.props;\r\n    const lineY = Math.floor(y + height / 2) - 1;\r\n    const x = Math.max(travellerX, this.props.x);\r\n\r\n    return (\r\n      <Layer\r\n        className=\"recharts-brush-traveller\"\r\n        onMouseEnter={this.handleEnterSlideOrTraveller}\r\n        onMouseLeave={this.handleLeaveSlideOrTraveller}\r\n        onMouseDown={this.travellerDragStartHandlers[id]}\r\n        onTouchStart={this.travellerDragStartHandlers[id]}\r\n        style={{ cursor: 'col-resize' }}\r\n      >\r\n        <rect x={x} y={y} width={travellerWidth} height={height} fill={stroke} stroke=\"none\" />\r\n        <line x1={x + 1} y1={lineY} x2={x + travellerWidth - 1} y2={lineY} fill=\"none\" stroke=\"#fff\" />\r\n        <line x1={x + 1} y1={lineY + 2} x2={x + travellerWidth - 1} y2={lineY + 2} fill=\"none\" stroke=\"#fff\" />\r\n      </Layer>\r\n    );\r\n  }\r\n\r\n  renderSlide(startX, endX) {\r\n    const { y, height, stroke } = this.props;\r\n\r\n    return (\r\n      <rect\r\n        className=\"recharts-brush-slide\"\r\n        onMouseEnter={this.handleEnterSlideOrTraveller}\r\n        onMouseLeave={this.handleLeaveSlideOrTraveller}\r\n        onMouseDown={this.handleSlideDragStart}\r\n        onTouchStart={this.handleSlideDragStart}\r\n        style={{ cursor: 'move' }}\r\n        stroke=\"none\"\r\n        fill={stroke}\r\n        fillOpacity={0.2}\r\n        x={Math.min(startX, endX)}\r\n        y={y}\r\n        width={Math.abs(endX - startX)}\r\n        height={height}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderText() {\r\n    const { startIndex, endIndex, y, height, travellerWidth, stroke } = this.props;\r\n    const offset = 5;\r\n    const attrs = {\r\n      pointerEvents: 'none',\r\n      fill: stroke,\r\n    };\r\n\r\n    return (\r\n      <Layer className=\"recharts-brush-texts\">\r\n        <Text\r\n          textAnchor=\"end\"\r\n          verticalAnchor=\"middle\"\r\n          x={Math.min(this.scaleValues[startIndex], this.scaleValues[endIndex]) - offset}\r\n          y={y + height / 2}\r\n          {...attrs}\r\n        >\r\n          {this.getTextOfTick(startIndex)}\r\n        </Text>\r\n        <Text\r\n          textAnchor=\"start\"\r\n          verticalAnchor=\"middle\"\r\n          x={Math.max(this.scaleValues[startIndex], this.scaleValues[endIndex]) + travellerWidth + offset}\r\n          y={y + height / 2}\r\n          {...attrs}\r\n        >\r\n          {this.getTextOfTick(endIndex)}\r\n        </Text>\r\n      </Layer>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { data, className, children, x, y, width, height, alwaysShowText } = this.props;\r\n    const { startX, endX, isTextActive, isSlideMoving, isTravellerMoving } = this.state;\r\n\r\n    if (\r\n      !data ||\r\n      !data.length ||\r\n      !isNumber(x) ||\r\n      !isNumber(y) ||\r\n      !isNumber(width) ||\r\n      !isNumber(height) ||\r\n      width <= 0 ||\r\n      height <= 0\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    const layerClass = classNames('recharts-brush', className);\r\n    const isPanoramic = React.Children.count(children) === 1;\r\n    const style = generatePrefixStyle('userSelect', 'none');\r\n\r\n    const { startIndex, endIndex } = this.getIndex({ startX, endX });\r\n    const newStartX = this.scale(startIndex);\r\n    const newEndX = this.scale(endIndex);\r\n\r\n    return (\r\n      <Layer\r\n        className={layerClass}\r\n        onMouseMove={this.handleDrag}\r\n        onMouseLeave={this.handleLeaveWrapper}\r\n        onMouseUp={this.handleDragEnd}\r\n        onTouchEnd={this.handleDragEnd}\r\n        onTouchMove={this.handleTouchMove}\r\n        style={style}\r\n      >\r\n        {this.renderBackground()}\r\n        {isPanoramic && this.renderPanorama()}\r\n        {this.renderSlide(newStartX, newEndX)}\r\n        {this.renderTraveller(newStartX, 'startX')}\r\n        {this.renderTraveller(newEndX, 'endX')}\r\n        {(isTextActive || isSlideMoving || isTravellerMoving || alwaysShowText) && this.renderText()}\r\n      </Layer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Brush;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Area,\r\n  Brush as OriginalBrush,\r\n} from 'recharts';\r\nimport CustomBrush from './components/Brush';\r\nimport classNames from 'classnames';\r\nimport './Visualizations.scss';\r\nconst Brush = CustomBrush as typeof OriginalBrush;\r\n\r\nconst graphCategories = [\r\n  { name: 'Infected asymptomatic', color: '#FFDC00' },\r\n  { name: 'Infected symptomatic', color: '#FF851B' },\r\n  { name: 'Critical Cases', color: '#FF4136' },\r\n  { name: 'Diseased', color: '#111111' },\r\n  { name: 'Susceptible', color: '#7FDBFF' },\r\n  { name: 'Isolated', color: '#001f3f' },\r\n  { name: 'Recovered', color: '#2ECC40' },\r\n];\r\n\r\nexport default function Visualizations({\r\n  loading,\r\n  data,\r\n  config,\r\n}: {\r\n  loading: boolean;\r\n  data: object[];\r\n  config: { socialDistancing: boolean; selfQuarantine: boolean };\r\n}) {\r\n  const [precautionDates, setPrecationDates] = useState({ startIndex: 0, endIndex: 20 });\r\n  if (loading) return null;\r\n\r\n  return (\r\n    <div className=\"Visualizations\">\r\n      <ResponsiveContainer>\r\n        <AreaChart data={data} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\r\n          <defs>\r\n            {graphCategories.map(category => (\r\n              <linearGradient\r\n                key={category.name}\r\n                id={`color${category.name.replace(/ /g, '')}`}\r\n                x1=\"0\"\r\n                y1=\"0\"\r\n                x2=\"0\"\r\n                y2=\"1\"\r\n              >\r\n                <stop offset=\"5%\" stopColor={category.color} stopOpacity={0.8} />\r\n                <stop offset=\"95%\" stopColor={category.color} stopOpacity={0.5} />\r\n              </linearGradient>\r\n            ))}\r\n          </defs>\r\n          <XAxis dataKey=\"index\" interval={19} />\r\n          <YAxis type=\"number\" domain={[0, dataMax => Math.round(dataMax)]} width={75} />\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          {graphCategories.map(category => (\r\n            <Area\r\n              key={category.name}\r\n              type=\"monotone\"\r\n              dataKey={category.name}\r\n              stackId=\"1\"\r\n              fillOpacity={1}\r\n              stroke={category.color}\r\n              fill={`url(#color${category.name.replace(/ /g, '')})`}\r\n            />\r\n          ))}\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n      <ResponsiveContainer>\r\n        <AreaChart data={data} margin={{ top: 10, right: 30, left: 75, bottom: 0 }}>\r\n          <Brush\r\n            startIndex={precautionDates.startIndex}\r\n            endIndex={precautionDates.endIndex}\r\n            className={classNames({ disabled: !config.socialDistancing && !config.selfQuarantine })}\r\n            onChange={setPrecationDates}\r\n            gap={10}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n","import Papa from 'papaparse';\r\n\r\nexport default function transformData(csvData: string): DataPoint[] {\r\n  const csvText = `${headers.join(';')}\r\n${csvData}`;\r\n  const { data } = Papa.parse(csvText, {\r\n    header: true,\r\n    transformHeader: header => header || 'index',\r\n    transform: v => +v,\r\n    skipEmptyLines: true,\r\n  });\r\n  return data;\r\n}\r\n\r\nconst headers = [\r\n  'index',\r\n  'Infected asymptomatic',\r\n  'Infected symptomatic',\r\n  'Critical Cases',\r\n  'Diseased',\r\n  'Susceptible',\r\n  'Isolated',\r\n  'Recovered',\r\n  'total infected',\r\n  'accumulated cases',\r\n];\r\n\r\ninterface DataPoint {\r\n  index: number;\r\n  'Infected asymptomatic': number;\r\n  'Infected symptomatic': number;\r\n  'Critical Cases': number;\r\n  Diseased: number;\r\n  Susceptible: number;\r\n  Isolated: number;\r\n  Recovered: number;\r\n  'total infected': number;\r\n  'accumulated cases': number;\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Toggle from 'react-toggle';\r\n\r\nexport default function Configuration({\r\n  loading,\r\n  onConfigUpdate,\r\n}: {\r\n  loading: boolean;\r\n  onConfigUpdate: (config: { socialDistancing: boolean; selfQuarantine: boolean }) => void;\r\n}) {\r\n  const [socialDistancing, setSocialDistancing] = useState(false);\r\n  const [selfQuarantine, setSelfQuarantine] = useState(false);\r\n\r\n  const isInitial = useRef(true);\r\n  useEffect(() => {\r\n    if (isInitial.current) {\r\n      isInitial.current = false;\r\n    } else {\r\n      onConfigUpdate({\r\n        socialDistancing,\r\n        selfQuarantine,\r\n      });\r\n    }\r\n  }, [socialDistancing, selfQuarantine, onConfigUpdate]);\r\n\r\n  if (loading) return null;\r\n\r\n  return (\r\n    <div className=\"Configuration\">\r\n      <div>\r\n        <Toggle id=\"socialDistancing\" checked={socialDistancing} onChange={() => setSocialDistancing(s => !s)} />\r\n        <label htmlFor=\"socialDistancing\">Social Distancing</label>\r\n      </div>\r\n      <div>\r\n        <Toggle id=\"selfQuarantine\" checked={selfQuarantine} onChange={() => setSelfQuarantine(s => !s)} />\r\n        <label htmlFor=\"selfQuarantine\">Self Quarantine</label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Visualizations from './Visualizations';\nimport transformData from './transformData';\nimport Configuration from './Configuration';\nimport './App.scss';\nimport './styles/react-toggle.scss';\n\nconst baseData = 'results_sd_20_80.csv'; // '00_full_results.csv';\n\nexport default function App() {\n  const [config, setConfig] = useState({ socialDistancing: false, selfQuarantine: false });\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<any>(null);\n\n  const dataFile = baseData; // TODO get file\n\n  useEffect(() => {\n    setLoading(true);\n    console.log(import(`!file-loader!../data/${dataFile}`));\n    import(`!file-loader!../data/${dataFile}`).then(async ({ default: dataUrl }) => {\n      const csvData = await fetch(dataUrl).then(response => response.text());\n      setData(transformData(csvData) as any);\n      setLoading(false);\n    });\n  }, [dataFile]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Covid Progress</h1>\n      </header>\n      <aside>\n        <Configuration loading={loading} onConfigUpdate={setConfig} />\n      </aside>\n      <main>\n        <Visualizations loading={loading} data={data} config={config} />\n      </main>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}